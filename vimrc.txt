filetype plugin on     " required
filetype indent on     " required
syntax on
set encoding=utf-8

set number
set showcmd
set ruler
set cursorline
set breakindent
set t_Co=256
set termguicolors
set autoindent
" show existing tab with 4 space width
" set expandtab
set tabstop=4
set showmatch
" set softtabstop=4
" when indenting with '>', use 4 spaces width
set shiftwidth=4
" On pressing tab, insert 4 spaces
set smartindent
autocmd BufRead,BufWritePre *.sh normal gg=G
" set backspace=indent,eol,start
" Use color 256( use this jika terminal support warna tsb
" set the runtime path to include Vundle and initialize
call plug#begin('~/.vim/plugged')

Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'junegunn/vim-easy-align'
Plug 'elzr/vim-json'
Plug 'honza/vim-snippets'
Plug 'kien/ctrlp.vim'
Plug 'mhinz/vim-signify'
Plug 'plasticboy/vim-markdown'
Plug 'flazz/vim-colorschemes'
Plug 'andersoncustodio/vim-enter-indent'
Plug 'mattn/emmet-vim'
Plug 'Valloric/YouCompleteMe'
Plug 'crusoexia/vim-monokai'
Plug 'scrooloose/nerdcommenter'
Plug 'scrooloose/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'tpope/vim-vinegar'
Plug 'qpkorr/vim-bufkill'
Plug 'ervandew/supertab'
Plug 'Yggdroot/indentLine'
"Plug 'Chie192/vim-autoformat'

" =================================================
call plug#end()            " required

"CONFIGURASI VIM

"IndentLine Garis2
let g:indentLine_leadingSpaceEnabled=1
let g:indentLine_leadingSpaceChar='.'

" Config Airline
" Setting Powerline biar oke
set fillchars+=stl:\ ,stlnc:\
let g:airline_detect_modified = 1
let g:airline_detect_paste = 1
let g:airline_detect_crypt = 1
let g:airline_detect_spell = 1
let g:airline_detect_iminsert = 0
let g:airline_inactive_collapse = 1
let g:airline_theme = 'wombat'
let g:airline_powerline_fonts = 1
let g:airline#extensions#bufferline#enabled = 0
let g:airline#extensions#bufferline#overwrite_variables = 1
let g:airline#extensions#branch#enabled = 1
let g:airline#extensions#branch#empty_message = ''
let g:airline#extensions#branch#vcs_priority = "git"
let g:airline#extensions#syntastic#enabled = 1
let g:airline#extensions#tagbar#enabled = 1
let g:airline#extensions#csv#enabled = 1
let g:airline#extensions#ctrlp#sho_adjacent_modes = 1
let g:airline#extensions#wordcount#enabled = 1
let g:airline#extensions#tabline#show_splits = 1
let g:airline#extensions#tmuxline#enabled = 1
let g:airline#extensions#promptline#enabled = 1
let g:airline#extensions#ycm#enabled = 1
let g:airline#extensions#virtualenv#enabled = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#switch_buffers_and_tabs = 1
let g:airline#extensions#tabline#show_buffers = 1
let g:airline#extensions#tabline#fnamemod = ':t'

set rtp+=$HOME/.local/lib/python2.7/site-packages/powerline/bindings/vim/
" Statusline use wide installation
set rtp+=/usr/local/lib/python2.7/dist-packages/powerline/bindings/vim/

" Setting Font
set guifont=DejaVu\ Sans:s12

if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

"Pengaturan Emmet
let g:user_emmet_mode='a'
"let g:user_emmet_install_global = 0
autocmd FileType html,php,css EmmetInstall
let g:user_emmet_leader_key='<C-Space>'
let g:user_emmet_expandabbr_key='<C-Space>'

"let g:user_emmet_settings = webapi#json#decode(join(readfile(expand('~/.snippets_cutom.json')), "\n"))

" Pengaturan SuperTab
let g:SuperTabLongesHighlight= 1
let g:SuperTabDefaultCompletionType= "context"
let g:SuperTabMappingBackward= '<F2>'

"configurasi YouCompleteMe ingore <tab>
" let g:UltiSnipsExpandTrigger="<tab"
" let g:UltiSnipsJumpForwardTrigger="<c-b>"
" let g:UltiSnipsJumpBackWardTrigger="<c-z>"
" autocmd FileType js UltiSnipsAddFiletypes javascript-node
" inoremap <expr> <CR>pumvisible() ?: 
" let g:ycm_key_list_select_completion = ['<TAB>']
" let g:ycm_key_list_previous_completion = ['<S-TAB']
" let g:ycm_key_list_stop_completion = ['<c-y>', '<UP>', '<DOWN>']
"let g:ycm_key_list_select_completion = []
"let g:ycm_key_list_previous_completion = []
"function! OmniPopup(action)
"	if pumvisible()
"		if a:action == 'j'
"			return "\<Down"
"		elseif a:action == 'k'
" 			return "\<Up>"
"		endif
"	endif
"	return a:action
" endfunction
" Remove Tab dari list
" let g:ycm_key_list_select_completion = ['<Down>']

" plug 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
" COLORSCHEME Monokai
colorscheme monokai


"setting paste
":set paste
set ignorecase

" Setting NERDTREE
autocmd StdinReadPre * let s:std_in=1
autocmd VimENter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
let g:NERDTreeShowHidden=1
nmap <C-h> <C-w><C-h>
nmap <C-j> <C-w><C-j>
nmap <C-k> <C-w><C-k>
nmap <C-l> <C-w><C-l>
let NERDTreeHijackNetrw = 0

" setting leader command
let mapleader = ","
nmap <Leader>f :bn<cr>
nmap <Leader>d :bp<cr>
nmap <Leader>s :BD<cr>
nmap <leader>g <C-]>

"setting JSON Vim
au! BufRead,BufNEwFile *.json set filetype=json
let g:vim_json_syntax_conceal = 0

"Remap untuk menjalankan terminal exec
 nnoremap <buffer> <F4> :exec '!python3' shellescape(@%, 1)<cr>

"fix YCMD
"let g:ycm_keep_logfiles = 1
"let g:ycm_log_level = 'debug'

au FileType php set omnifunc=phpcomplete#CompletePHP
"PHP generate COe Highlights

let php_sql_query=1
let php_htmlInStrings=1


"Mapping Aligment
xmap ga <Plug>(EasyAlign)
nmap ga <Plug>(EasyAlign)
